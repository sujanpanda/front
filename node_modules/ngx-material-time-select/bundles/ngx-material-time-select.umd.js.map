{"version":3,"file":"ngx-material-time-select.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-material-time-select/lib/time-adapter.service.ts","ng://ngx-material-time-select/lib/time-formats.ts","ng://ngx-material-time-select/lib/time-select-intl.service.ts","ng://ngx-material-time-select/lib/time-unit-select.component.ts","ng://ngx-material-time-select/lib/time-unit-option.component.ts","ng://ngx-material-time-select/lib/time-select-errors.ts","ng://ngx-material-time-select/lib/time-select.component.ts","ng://ngx-material-time-select/lib/time-select-input.directive.ts","ng://ngx-material-time-select/lib/time-select-toggle.component.ts","ng://ngx-material-time-select/lib/time-select.module.ts","ng://ngx-material-time-select/lib/native-time-adapter.service.ts","ng://ngx-material-time-select/lib/native-time-formats.ts","ng://ngx-material-time-select/lib/native-time.module.ts","ng://ngx-material-time-select/lib/moment-time-adapter.service.ts","ng://ngx-material-time-select/lib/moment-time-formats.ts","ng://ngx-material-time-select/lib/moment-time.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {DateAdapter} from '@angular/material';\r\nimport {Moment} from 'moment';\r\n\r\n/** Adapts date object to be usable as a date time by cdk-based components that work with dates. */\r\nexport abstract class TimeAdapter<D> extends DateAdapter<D> {\r\n\r\n  /**\r\n   * Gets the hour component of the given date.\r\n   * @param date The date to extract the hour from.\r\n   * @returns The hour component (0-indexed, 0 = midnight).\r\n   */\r\n  abstract getHour(date: D): number;\r\n\r\n  /**\r\n   * Gets the minute component of the given date.\r\n   * @param date The date to extract the minute from.\r\n   * @returns The minute component (0-indexed, 0 = start of hour).\r\n   */\r\n  abstract getMinute(date: D): number;\r\n\r\n  /**\r\n   * Gets the second component of the given date.\r\n   * @param date The date to extract the second from.\r\n   * @returns The second component (0-indexed, 0 = start of minute).\r\n   */\r\n  abstract getSecond(date: D): number;\r\n\r\n  /**\r\n   * Create a date with the given hour, minute and second. Does not allow over/under-flow of the\r\n   * hour, minute and second.\r\n   * @param hour The hour of the date. Must be an integer 0 - 23.\r\n   * @param minute The minute of the date. Must be an integer 0 - 59.\r\n   * @param second The second of the date. Must be an integer 0 - 59.\r\n   * @returns The new date.\r\n   */\r\n  abstract createTime(hour?: number, minute?: number, second?: number): D;\r\n\r\n  /**\r\n   * Gets the current date.\r\n   * @returns The current date.\r\n   */\r\n  abstract now(): D;\r\n\r\n  /**\r\n   * Convert the given date to a Moment object.\r\n   * @param date the date object to convert.\r\n   */\r\n  abstract toMoment(date: D): Moment;\r\n\r\n  /**\r\n   * Compares two date times.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @returns 0 if the date times are equal, a number less than 0 if the first date time is earlier,\r\n   *     a number greater than 0 if the first date time is later.\r\n   */\r\n  compareTime(first: D, second: D): number {\r\n    return this.compareDate(first, second) ||\r\n      this.getHour(first) - this.getHour(second) ||\r\n      this.getMinute(first) - this.getMinute(second) ||\r\n      this.getSecond(first) - this.getSecond(second);\r\n  }\r\n\r\n  /**\r\n   * Checks if two date times are equal.\r\n   * @param first The first date to check.\r\n   * @param second The second date to check.\r\n   * @returns Whether the two date times are equal.\r\n   *     Null dates are considered equal to other null dates.\r\n   */\r\n  sameTime(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareTime(first, second);\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  /**\r\n   * Clamp the given date between min and max date times.\r\n   * @param date The date to clamp.\r\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n   *     otherwise `date`.\r\n   */\r\n  clampTime(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareTime(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareTime(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport interface MatTimeFormats {\r\n  parse: {\r\n    timeInput: any\r\n  };\r\n  display: {\r\n    timeInput: any\r\n    timeA11yLabel: any\r\n  };\r\n}\r\n\r\nexport const MAT_TIME_FORMATS = new InjectionToken<MatTimeFormats>('mat-time-formats');\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n/** TimeSelect data that requires internationalization. */\r\n@Injectable()\r\nexport class MatTimeSelectIntl {\r\n\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** A label for the button used to open the time select popup (used by screen readers). */\r\n  openTimeSelectLabel = 'Open time select';\r\n\r\n  /** A label for the a.m. button toggle (used by screen readers). */\r\n  amLabel = 'AM';\r\n\r\n  /** A label for the p.m. button toggle (used by screen readers). */\r\n  pmLabel = 'PM';\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {DurationInputArg1, DurationInputArg2, unitOfTime} from 'moment';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {MAT_TIME_FORMATS, MatTimeFormats} from './time-formats';\r\n\r\n/** Component used to select a value of a unit of time. */\r\n@Component({\r\n  selector: 'mat-time-unit-select',\r\n  templateUrl: './time-unit-select.component.html',\r\n  styleUrls: ['./time-unit-select.component.scss'],\r\n  exportAs: 'matTimeSelect',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatTimeUnitSelectComponent<D> implements AfterViewInit, OnInit {\r\n\r\n  private _originTop: number;\r\n\r\n  /** The currently selected value. */\r\n  @Input() value: number;\r\n  /** The unit of time of the time select. */\r\n  @Input() unit: unitOfTime.All;\r\n  /** The minimum selectable value. */\r\n  @Input() min: number | null;\r\n  /** The maximum selectable value. */\r\n  @Input() max: number | null;\r\n\r\n  /** The list of all values of the time select. */\r\n  options: {value: number; label: string}[] = [];\r\n\r\n  /** Emits when selected value has been changed. Output to enable support for two-way binding on `[(value)]`. */\r\n  @Output() valueChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /** The panel element containing all time select options. */\r\n  @ViewChild('panel') panel: ElementRef<HTMLElement>;\r\n\r\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\r\n              private _timeAdapter: TimeAdapter<D>,\r\n              @Inject(MAT_TIME_FORMATS) private _timeFormats: MatTimeFormats) { }\r\n\r\n  ngOnInit() {\r\n    const unit = this.unit;\r\n    const time = this._timeAdapter.createTime();\r\n    const moment = this._timeAdapter.toMoment(time);\r\n    const start = moment.clone().startOf('day');\r\n    const end = moment.clone().endOf('day');\r\n    const min = start.get(unit);\r\n    const max = end.get(unit);\r\n    const localeData = moment.localeData();\r\n    const displayFormat = localeData.longDateFormat('LTS');\r\n    const unitFormat = unit === 'hour' ?\r\n      displayFormat.match(/hh?|HH?/g)[0] : unit === 'minute' ?\r\n        displayFormat.match(/mm?/g)[0] : displayFormat.match(/ss?/g)[0];\r\n    moment.set(unit, this.value);\r\n    moment.subtract(1 as DurationInputArg1, unit as DurationInputArg2);\r\n    for (let value = min; value <= max; value++) {\r\n      moment.add(1 as DurationInputArg1, unit as DurationInputArg2);\r\n      this.options.push({value: moment.get(unit), label: moment.format(unitFormat)});\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const element = this.panel.nativeElement;\r\n    this._originTop = parseFloat(getComputedStyle(element).top);\r\n    element.addEventListener('transitionend', () => {\r\n      element.style.removeProperty('transition');\r\n    });\r\n    setTimeout(() => this.move(this.options.length / 2));\r\n  }\r\n\r\n  /** Select the previous option. */\r\n  prev() {\r\n    this.move(-1);\r\n  }\r\n\r\n  /** Select the next option. */\r\n  next() {\r\n    this.move(+1);\r\n  }\r\n\r\n  /**\r\n   * Select the option moving by the given amount of step.\r\n   * @param step The amount of step to move.\r\n   */\r\n  move(step: number) {\r\n    const element = this.panel.nativeElement;\r\n    const option = element.querySelector('mat-time-unit-option');\r\n    const optionHeight = parseFloat(getComputedStyle(option).height);\r\n    const currentTop = parseFloat(getComputedStyle(element).top);\r\n    const targetTop = currentTop + (step * optionHeight);\r\n    const y = this._originTop - targetTop;\r\n\r\n    element.style.top = `${targetTop}px`;\r\n\r\n    if (step < 0) {\r\n      // Move last option to the top\r\n      for (let i = 0; i > step; i--) {\r\n        this.options.unshift(this.options.pop());\r\n      }\r\n    } else if (step > 0) {\r\n      // Move first option to the bottom\r\n      for (let i = 0; i < step; i++) {\r\n        this.options.push(this.options.shift());\r\n      }\r\n    }\r\n\r\n    this.value = this.options[(this.options.length / 2)].value;\r\n    this.valueChange.emit(this.value);\r\n\r\n    element.style.transition = 'transform 0.5s';\r\n    element.style.transform = `translateY(${y}px)`;\r\n  }\r\n\r\n  /**\r\n   * Gets the previous option value.\r\n   */\r\n  getPrev(): number {\r\n    return this.options[(this.options.length / 2) - 1].value;\r\n  }\r\n\r\n  /**\r\n   * Gets the next option value.\r\n   */\r\n  getNext(): number {\r\n    return this.options[(this.options.length / 2) + 1].value;\r\n  }\r\n\r\n  /**\r\n   * Whether the given value is valid.\r\n   * @param value The value to check.\r\n   */\r\n  isValid(value: number): boolean {\r\n    return (this.min === null || value >= this.min) && (this.max === null || value <= this.max);\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {CanDisableRippleCtor, mixinDisableRipple} from '@angular/material';\r\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\r\n\r\nexport class MatTimeUnitOptionBase { }\r\nexport const _MatTimeUnitOptionMixinBase: CanDisableRippleCtor & typeof MatTimeUnitOptionBase =\r\n  mixinDisableRipple(MatTimeUnitOptionBase);\r\n\r\n/** Single time option inside a `<mat-time-unit-select>` element */\r\n@Component({\r\n  selector: 'mat-time-unit-option',\r\n  templateUrl: './time-unit-option.component.html',\r\n  styleUrls: ['./time-unit-option.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatTimeUnitOptionComponent<D> extends _MatTimeUnitOptionMixinBase implements OnInit {\r\n\r\n  private _disabled = false;\r\n  private _selected = false;\r\n\r\n  /** The value of the option. */\r\n  @Input() value: number;\r\n  /** Whether ripples for the option are disabled. */\r\n  @Input() disableRipple: boolean;\r\n\r\n  /** The element containing the display text of the option. */\r\n  @ViewChild('text') _text: ElementRef<HTMLElement>;\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class') readonly class = 'mat-time-unit-option';\r\n  /** @docs-private */\r\n  @HostBinding('attr.role') readonly role = 'option';\r\n  /** @docs-private */\r\n  @HostBinding('attr.tabindex') readonly tabindex = -1;\r\n\r\n  /** Whether or not the option is currently selected. */\r\n  @Input()\r\n  @HostBinding('class.mat-time-unit-option-selected')\r\n  get selected(): boolean { return this._selected; }\r\n  set selected(value: boolean) {\r\n    const selected = coerceBooleanProperty(value);\r\n    if (this._selected !== selected) {\r\n      this._selected = selected;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Whether the option is disabled. */\r\n  @Input()\r\n  @HostBinding('class.mat-time-unit-option-disabled')\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    const disabled = coerceBooleanProperty(value);\r\n    if (this._disabled !== disabled) {\r\n      this._disabled = disabled;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.aria-disabled')\r\n  get ariaDisabled(): string { return this.disabled.toString(); }\r\n\r\n  constructor(private _elementRef: ElementRef<HTMLElement>,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Inject(forwardRef(() => MatTimeUnitSelectComponent)) public timeUnitSelect: MatTimeUnitSelectComponent<D>) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.timeUnitSelect.valueChange.subscribe(value => this.selected = this.value === value);\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    return this._text ? (this._text.nativeElement.textContent || '').trim() : '';\r\n  }\r\n\r\n  /** Gets the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Whether ripples for the option are disabled. */\r\n  _isRippleDisabled(): boolean {\r\n    return this.disabled || this.disableRipple;\r\n  }\r\n\r\n  /** Handle click on the option. */\r\n  @HostListener('click')\r\n  _onClick() {\r\n    if (!this.disabled) {\r\n      this.timeUnitSelect.move(this.value - this.timeUnitSelect.value);\r\n    }\r\n  }\r\n\r\n}\r\n","/** @docs-private */\r\nexport function createMissingTimeImplError(provider: string) {\r\n  return Error(\r\n    `MatTimeSelectComponent: No provider found for ${provider}. You must import one of the following ` +\r\n    `modules at your application root: MatNativeTimeModule, MatMomentTimeModule, or provide a ` +\r\n    `custom implementation.`);\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  InjectionToken,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Provider,\r\n  QueryList,\r\n  ViewChildren,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\r\nimport {Overlay, OverlayConfig, OverlayRef, PositionStrategy, ScrollStrategy} from '@angular/cdk/overlay';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CanColor, CanColorCtor, mixinColor, ThemePalette} from '@angular/material';\r\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {filter, take} from 'rxjs/operators';\r\nimport {DurationInputArg1, DurationInputArg2, Moment, unitOfTime} from 'moment';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {createMissingTimeImplError} from './time-select-errors';\r\nimport {MatTimeSelectIntl} from './time-select-intl.service';\r\nimport {MatTimeSelectInputDirective} from './time-select-input.directive';\r\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\r\n\r\n/** Used to generate a unique ID for each time select instance. */\r\nlet timeSelectUid = 0;\r\n\r\n/** Injection token used to initialize the time select data. */\r\nexport const MAT_TIME_SELECT_DATA = new InjectionToken<Moment>('mat-time-select-data');\r\n\r\n/** Injection token that determines the scroll handling while the time select is opened. */\r\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>('mat-time-select-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER: Provider = {\r\n  provide: MAT_TIME_SELECT_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY\r\n};\r\n\r\nexport interface MatTimeSelectData<D> {\r\n  units?: unitOfTime.All[];\r\n  value?: D;\r\n  minTime?: D;\r\n  maxTime?: D;\r\n}\r\n\r\n/** @docs-private */\r\nexport class MatTimeSelectContentBase {\r\n\r\n  constructor(public _elementRef: ElementRef) { }\r\n\r\n}\r\n\r\nexport const _MatTimeSelectContentMixinBase: CanColorCtor & typeof MatTimeSelectContentBase =\r\n  mixinColor(MatTimeSelectContentBase);\r\n\r\n/**\r\n * Component used as the content for the time select popup.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-time-select-content',\r\n  templateUrl: './time-select-content.component.html',\r\n  styleUrls: ['./time-select-content.component.scss'],\r\n  exportAs: 'matTimeSelectContent',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatTimeSelectContentComponent<D> extends _MatTimeSelectContentMixinBase implements CanColor {\r\n\r\n  /** @docs-private */\r\n  @Input() color: ThemePalette;\r\n  /** The array of unit of time selectable in the time select content. */\r\n  @Input() units: unitOfTime.All[];\r\n  /** The currently selected time of the time select content. */\r\n  @Input() value: Moment;\r\n  /** The minimum selectable time. */\r\n  @Input() minTime: Moment;\r\n  /** The minimum selectable time. */\r\n  @Input() maxTime: Moment;\r\n\r\n  /** Emits when the time select content selected time has been changed. */\r\n  @Output() valueChange: EventEmitter<Moment> = new EventEmitter<Moment>();\r\n\r\n  /** Reference to the internal time unit select components. */\r\n  @ViewChildren(MatTimeUnitSelectComponent) timeUnitSelectComponents: QueryList<MatTimeUnitSelectComponent<D>>;\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class') readonly class = 'mat-time-select-content';\r\n\r\n  /** The hour clock type. Possible values: 12: 12 hour clock; 24: 24 hour clock */\r\n  hourClock: number;\r\n\r\n  /**\r\n   * The time period of the currently selected time of the time select content. Possible values: `am` when selected time hour is less\r\n   * than 12; `pm` when selected time hour is greater than or equal to 12.\r\n   */\r\n  get amPm(): string { return this.value ? (this.value.hour() < 12 ? 'am' : 'pm') : null; }\r\n  set amPm(value: string) {\r\n    if (this.timeUnitSelectComponents) {\r\n      this.timeUnitSelectComponents.toArray()\r\n        .filter(timeSelect => timeSelect.unit === 'hour')\r\n        .forEach(timeSelect => timeSelect.move(value === 'am' ? -12 : 12));\r\n    }\r\n  }\r\n\r\n  constructor(elementRef: ElementRef,\r\n              public _intl: MatTimeSelectIntl,\r\n              @Optional() private _timeAdapter: TimeAdapter<D>,\r\n              @Optional() @Inject(MAT_TIME_SELECT_DATA) data: MatTimeSelectData<D>) {\r\n    super(elementRef);\r\n\r\n    if (!this._timeAdapter) {\r\n      throw createMissingTimeImplError('TimeAdapter');\r\n    }\r\n\r\n    const time = this._timeAdapter.isDateInstance(data.value) && this._timeAdapter.isValid(data.value) ?\r\n      this._timeAdapter.clone(data.value) : this._timeAdapter.now();\r\n    const value = this._timeAdapter.toMoment(this._timeAdapter.clampTime(time, data.minTime, data.maxTime));\r\n    const localeData = value.localeData();\r\n    const displayFormat = localeData.longDateFormat('LTS');\r\n    this.hourClock = /hh?/g.test(displayFormat) ? 12 : 24;\r\n    this.value = value;\r\n    this.units = data.units || ['hour', 'minute'];\r\n    this.minTime = data.minTime ? this._timeAdapter.toMoment(data.minTime) : null;\r\n    this.maxTime = data.maxTime ? this._timeAdapter.toMoment(data.maxTime) : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of the given unit of time.\r\n   * @param unit The unit of time to query.\r\n   * @returns The retrieved value.\r\n   */\r\n  get(unit: unitOfTime.All): number {\r\n    return this.value.get(unit);\r\n  }\r\n\r\n  /**\r\n   * Sets the value of the given unit of time.\r\n   * @param unit The unit of time to update.\r\n   * @param value The value to set.\r\n   */\r\n  set(unit: unitOfTime.All, value: number) {\r\n    this.value.set(unit, value);\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * Gets the minimum allowed value of the given unit of time.\r\n   * @param unit The unit of time to query.\r\n   * @returns The minimum value.\r\n   */\r\n  getMin(unit: unitOfTime.All): number | null {\r\n    let min = null;\r\n    if (this.minTime && this.value.isSame(this.minTime, 'day')) {\r\n      if (this.getPrev(unit).isBefore(this.minTime)) {\r\n        min = this.value.get(unit);\r\n      }\r\n      if (this.getNext(unit).isBefore(this.minTime)) {\r\n        min = this.minTime.get(unit);\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  /**\r\n   * Gets the maximum allowed value of the given unit of time.\r\n   * @param unit The unit of time to query.\r\n   * @returns The maximum value.\r\n   */\r\n  getMax(unit: unitOfTime.All): number | null {\r\n    let max = null;\r\n    if (this.maxTime && this.value.isSame(this.maxTime, 'day')) {\r\n      if (this.getNext(unit).isAfter(this.maxTime)) {\r\n        max = this.value.get(unit);\r\n      }\r\n      if (this.getPrev(unit).isAfter(this.maxTime)) {\r\n        max = this.maxTime.get(unit);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  /**\r\n   * Gets the value after moving up the given unit of time.\r\n   * @param unit The unit of time to move.\r\n   * @returns The new value.\r\n   */\r\n  getPrev(unit: unitOfTime.All): Moment {\r\n    const prev = this.value.clone().subtract(1 as DurationInputArg1, unit as DurationInputArg2);\r\n    return this.value.clone().set(unit, prev.get(unit));\r\n  }\r\n\r\n  /**\r\n   * Gets the value after moving down the given unit of time.\r\n   * @param unit The unit of time to move.\r\n   * @returns The new value.\r\n   */\r\n  getNext(unit: unitOfTime.All): Moment {\r\n    const next = this.value.clone().add(1 as DurationInputArg1, unit as DurationInputArg2);\r\n    return this.value.clone().set(unit, next.get(unit));\r\n  }\r\n\r\n  /**\r\n   * Gets the value before midday.\r\n   */\r\n  getAM(): Moment {\r\n    if (this.value.hour() >= 12) {\r\n      return this.value.clone().subtract(12, 'hour');\r\n    }\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * Gets the value after midday.\r\n   */\r\n  getPM(): Moment {\r\n    if (this.value.hour() < 12) {\r\n      return this.value.clone().add(12, 'hour');\r\n    }\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * Whether the given value is selectable.\r\n   * @param value The value to check.\r\n   * @returns `true` if the value is valid. Otherwise `false`.\r\n   */\r\n  isValid(value: Moment): boolean {\r\n    const beforeMin = this.minTime && value.isBefore(this.minTime);\r\n    const afterMax = this.maxTime && value.isAfter(this.maxTime);\r\n    return !(beforeMin || afterMax);\r\n  }\r\n\r\n}\r\n\r\n/** Component responsible for managing the time select popup. */\r\n@Component({\r\n  selector: 'mat-time-select',\r\n  template: '',\r\n  exportAs: 'matTimeSelect',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatTimeSelectComponent<D> implements OnDestroy, CanColor {\r\n\r\n  /** Subscription to value changes in the associated input element. */\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  private _startAt: D | null;\r\n  private _color: ThemePalette;\r\n  private _disabled: boolean;\r\n  private _selected: D;\r\n  private _opened = false;\r\n\r\n  private _disabledChange: Subject<boolean> = new Subject<boolean>();\r\n  private _selectedChange: Subject<D> = new Subject<D>();\r\n\r\n  /** A reference to the overlay when the time select is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n  /** A portal containing the popup for this time select. */\r\n  private _popupComponentPortal: ComponentPortal<MatTimeSelectContentComponent<D>>;\r\n  /** Reference to the component instantiated in popup mode. */\r\n  private _popupComponentRef: ComponentRef<MatTimeSelectContentComponent<D>>;\r\n  /** The element that was focused before the time select was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n  private readonly _scrollStrategy: () => ScrollStrategy;\r\n\r\n  /** The input element this time select is associated with. */\r\n  _timeSelectInput: MatTimeSelectInputDirective<D>;\r\n\r\n  /** Emits when the time select has been opened. */\r\n  @Output('open') openStream: EventEmitter<void> = new EventEmitter<void>();\r\n  /** Emits when the time select has been closed. */\r\n  @Output('close') closeStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** The id for the time select popup. */\r\n  id = `mat-time-select-${timeSelectUid++}`;\r\n\r\n  /** The initial time of the time select. */\r\n  @Input()\r\n  get startAt(): D | null { return this._startAt || (this._timeSelectInput ? this._timeSelectInput.value : null); }\r\n  set startAt(value: D | null) { this._startAt = this._getValidDateOrNull(this._timeAdapter.deserialize(value)); }\r\n\r\n  /** The color palette to use on the time select popup. */\r\n  @Input()\r\n  get color(): ThemePalette { return this._color || (this._timeSelectInput ? this._timeSelectInput.getThemePalette() : undefined); }\r\n  set color(value: ThemePalette) { this._color = value; }\r\n\r\n  /** Whether the time select pop-up should disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled !== undefined ? this._disabled : (this._timeSelectInput ? this._timeSelectInput.disabled : false);\r\n  }\r\n  set disabled(value: boolean) {\r\n    const disabled = coerceBooleanProperty(value);\r\n    if (this._disabled !== disabled) {\r\n      this._disabled = disabled;\r\n      this._disabledChange.next(disabled);\r\n    }\r\n  }\r\n\r\n  /** The currently selected time. */\r\n  @Input()\r\n  get selected(): D { return this._selected; }\r\n  set selected(value: D) { this._selected = value; }\r\n\r\n  /** Whether the time select is opened. */\r\n  @Input()\r\n  get opened(): boolean { return this._opened; }\r\n  set opened(value: boolean) { value ? this.open() : close(); }\r\n\r\n  /** Emits when the time select disabled state has been changed. */\r\n  get disabledChange(): Observable<boolean> { return this._disabledChange.asObservable(); }\r\n  /** Emits when the time select selected time has been changed. */\r\n  get selectedChange(): Observable<D> { return this._selectedChange.asObservable(); }\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _injector: Injector,\r\n              private _ngZone: NgZone,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_TIME_SELECT_SCROLL_STRATEGY) scrollStrategy: any,\r\n              @Optional() private _timeAdapter: TimeAdapter<D>,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n    if (!this._timeAdapter) {\r\n      throw createMissingTimeImplError('TimeAdapter');\r\n    }\r\n\r\n    this._scrollStrategy = scrollStrategy;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n      this._popupComponentRef = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the given time.\r\n   * @param time The date time to select.\r\n   */\r\n  select(time: D) {\r\n    const oldValue = this.selected;\r\n    const value = this._timeAdapter.clone(time);\r\n    this.selected = value;\r\n    if (!this._timeAdapter.sameTime(oldValue, value)) {\r\n      this._selectedChange.next(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this time select.\r\n   * @param input The time select input to register with this time select.\r\n   */\r\n  registerInput(input: MatTimeSelectInputDirective<D>) {\r\n    if (this._timeSelectInput) {\r\n      throw Error('A MatTimeSelect can only be associated with a single input.');\r\n    }\r\n    this._timeSelectInput = input;\r\n    this._inputSubscription = this._timeSelectInput.valueChange.subscribe((value: D | null) => this.selected = value);\r\n  }\r\n\r\n  /** Open the time select. */\r\n  open() {\r\n    if (this._opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._timeSelectInput) {\r\n      throw Error('Attempted to open an MatTimeSelect with no associated input.');\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this._openAsPopup();\r\n    this._opened = true;\r\n    this.openStream.emit();\r\n  }\r\n\r\n  /** Close the time select. */\r\n  close() {\r\n    if (!this._opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._popupComponentPortal && this._popupComponentPortal.isAttached) {\r\n      this._popupComponentPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this._opened) {\r\n        this._opened = false;\r\n        this.closeStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the time select as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the time select on focus, the user could be stuck with not being\r\n      // able to close the select panel at all. We work around it by making the logic, that marks\r\n      // the time select as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the time select as a popup. */\r\n  private _openAsPopup(): void {\r\n    this._popupComponentPortal = new ComponentPortal<MatTimeSelectContentComponent<D>>(\r\n      MatTimeSelectContentComponent,\r\n      this._viewContainerRef,\r\n      this._createInjector()\r\n    );\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      this._popupComponentRef = this._popupRef.attach(this._popupComponentPortal);\r\n      this._popupComponentRef.instance.valueChange.subscribe(\r\n        (value: Moment) => this.select(this._timeAdapter.deserialize(value.toISOString()))\r\n      );\r\n      this._setColor();\r\n\r\n      // Update the position once the select panel has rendered.\r\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n        this._popupRef.updatePosition();\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Create a portal injector to inject time select initial data. */\r\n  private _createInjector(): PortalInjector {\r\n    const data: MatTimeSelectData<D> = {\r\n      value: this.startAt,\r\n      minTime: this._timeSelectInput && this._timeSelectInput.min,\r\n      maxTime: this._timeSelectInput && this._timeSelectInput.max\r\n    };\r\n    const injectorTokens = new WeakMap<any, any>([\r\n      [MAT_TIME_SELECT_DATA, data]\r\n    ]);\r\n    return new PortalInjector(this._injector, injectorTokens);\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: 'mat-overlay-transparent-backdrop',\r\n      direction: this._dir,\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: 'mat-time-select-popup',\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\r\n\r\n    merge(\r\n      this._popupRef.backdropClick(),\r\n      this._popupRef.detachments(),\r\n      this._popupRef.keydownEvents().pipe(filter(event => {\r\n        // Closing on alt + up is only valid when there's an input associated with the time select.\r\n        return event.keyCode === ESCAPE ||\r\n          (this._timeSelectInput && event.altKey && event.keyCode === UP_ARROW);\r\n      }))\r\n    ).subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup position strategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay.position()\r\n      .flexibleConnectedTo(this._timeSelectInput.getConnectedOverlayOrigin())\r\n      .withTransformOriginOn('.mat-time-select-content')\r\n      .withFlexibleDimensions(false)\r\n      .withViewportMargin(8)\r\n      .withLockedPosition()\r\n      .withPositions([\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'bottom'\r\n        }\r\n      ]);\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._timeAdapter.isDateInstance(obj) && this._timeAdapter.isValid(obj) ? obj : null;\r\n  }\r\n\r\n  /** Passes the current theme color along to the time select overlay. */\r\n  private _setColor(): void {\r\n    if (this._popupComponentRef) {\r\n      this._popupComponentRef.instance.color = this.color;\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\r\nimport {MAT_INPUT_VALUE_ACCESSOR, MatFormField, ThemePalette} from '@angular/material';\r\nimport {Observable, Subject, Subscription} from 'rxjs';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {MAT_TIME_FORMATS, MatTimeFormats} from './time-formats';\r\nimport {MatTimeSelectComponent} from './time-select.component';\r\n\r\n/**\r\n * An event used for time select input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatTimeSelectInputEvent instead.\r\n */\r\nexport class MatTimeSelectInputEvent<D> {\r\n\r\n  /** The new value for the target time select input. */\r\n  value: D;\r\n\r\n  constructor(\r\n    /** Reference to the time select input component that emitted the event. */\r\n    public target: MatTimeSelectInputDirective<D>,\r\n    /** Reference to the native input element associated with the time select input. */\r\n    public targetElement: HTMLElement) {\r\n    this.value = this.target.value;\r\n  }\r\n\r\n}\r\n\r\n/** Directive used to connect an input to a MatTimeSelectComponent. */\r\n@Directive({\r\n  selector: 'input[matTimeSelect]',\r\n  providers: [\r\n    {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MatTimeSelectInputDirective), multi: true},\r\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => MatTimeSelectInputDirective), multi: true},\r\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatTimeSelectInputDirective}\r\n  ],\r\n  exportAs: 'matTimeSelectInput'\r\n})\r\nexport class MatTimeSelectInputDirective<D> implements OnDestroy, ControlValueAccessor, Validator {\r\n\r\n  private _timeSelectSubscription = Subscription.EMPTY;\r\n  private _localeSubscription: Subscription = Subscription.EMPTY;\r\n\r\n  private _timeSelect: MatTimeSelectComponent<D>;\r\n\r\n  private _value: D;\r\n  private _min: D;\r\n  private _max: D;\r\n  private _disabled: boolean;\r\n\r\n  private _valueChange: Subject<D | null> = new Subject<D | null>();\r\n  private _disabledChange: Subject<boolean> = new Subject<boolean>();\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private readonly _parseValidator: ValidatorFn;\r\n  /** The form control validator for the min date time. */\r\n  private readonly _minValidator: ValidatorFn;\r\n  /** The form control validator for the max date time. */\r\n  private readonly _maxValidator: ValidatorFn;\r\n  /** The combined form control validator for this input. */\r\n  private readonly _validator: ValidatorFn | null;\r\n\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid: boolean;\r\n\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() readonly timeChange: EventEmitter<MatTimeSelectInputEvent<D>> = new EventEmitter<MatTimeSelectInputEvent<D>>();\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() readonly timeInput: EventEmitter<MatTimeSelectInputEvent<D>> = new EventEmitter<MatTimeSelectInputEvent<D>>();\r\n\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  valueChange: Observable<D | null> = this._valueChange.asObservable();\r\n  /** Emits when the disabled state has changed. */\r\n  disabledChange: Observable<boolean> = this._disabledChange.asObservable();\r\n\r\n  private _onChange: (value: any) => void = () => {};\r\n  private _onTouched: () => void = () => {};\r\n  private _onValidatorChange: () => void = () => {};\r\n\r\n  /** The time select that this input is associated with. */\r\n  @Input()\r\n  set matTimeSelect(value: MatTimeSelectComponent<D>) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    this._timeSelect = value;\r\n    this._timeSelect.registerInput(this);\r\n    this._timeSelectSubscription.unsubscribe();\r\n\r\n    this._timeSelectSubscription = this._timeSelect.selectedChange.subscribe((selected: D) => {\r\n      this.value = selected;\r\n      this._onChange(selected);\r\n      this._onTouched();\r\n      this.timeInput.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\r\n      this.timeChange.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\r\n    });\r\n  }\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null { return this._value; }\r\n  set value(value: D | null) {\r\n    value = this._timeAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._timeAdapter.isValid(value);\r\n    value = this._getValidDateOrNull(value);\r\n    const oldValue = this._value;\r\n    this._value = value;\r\n    this._formatValue(value);\r\n\r\n    if (!this._timeAdapter.sameTime(oldValue, value)) {\r\n      this._valueChange.next(value);\r\n    }\r\n  }\r\n\r\n  /** The minimum valid date time. */\r\n  @Input()\r\n  get min(): D | null { return this._min; }\r\n  set min(value: D | null) {\r\n    this._min = this._getValidDateOrNull(this._timeAdapter.deserialize(value));\r\n    this._onValidatorChange();\r\n  }\r\n\r\n  /** The maximum valid date time. */\r\n  @Input()\r\n  get max(): D | null { return this._max; }\r\n  set max(value: D | null) {\r\n    this._max = this._getValidDateOrNull(this._timeAdapter.deserialize(value));\r\n    this._onValidatorChange();\r\n  }\r\n\r\n  /** Whether the time select input is disabled. */\r\n  @HostBinding()\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    const disabled = coerceBooleanProperty(value);\r\n    const element = this._elementRef.nativeElement;\r\n    if (this.disabled !== disabled) {\r\n      this._disabled = disabled;\r\n      this._disabledChange.next(disabled);\r\n    }\r\n    if (disabled && element.blur) {\r\n      element.blur();\r\n    }\r\n  }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.aria-haspopup')\r\n  get _ariaHasPopup(): boolean { return true; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.aria-owns')\r\n  get _ariaOwns(): boolean { return (this._timeSelect && this._timeSelect.opened && !!this._timeSelect.id) || null; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.min')\r\n  get _minTime(): string | null { return this.min ? this._timeAdapter.toIso8601(this.min) : null; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.max')\r\n  get _maxTime(): string | null { return this.max ? this._timeAdapter.toIso8601(this.max) : null; }\r\n\r\n  constructor(private _elementRef: ElementRef<HTMLInputElement>,\r\n              @Optional() private _timeAdapter: TimeAdapter<D>,\r\n              @Optional() @Inject(MAT_TIME_FORMATS) private _timeFormats: MatTimeFormats,\r\n              @Optional() private _formField: MatFormField) {\r\n    this._parseValidator = (): ValidationErrors | null => {\r\n      return this._lastValueValid ? null : {'matTimeSelectParse': {'text': this._elementRef.nativeElement.value}};\r\n    };\r\n\r\n    this._minValidator = (control: AbstractControl): ValidationErrors | null => {\r\n      const value = this._getValidDateOrNull(this._timeAdapter.deserialize(control.value));\r\n      return !this.min || !value || this._timeAdapter.compareTime(this.min, value) <= 0 ?\r\n        null : {'matTimeSelectMin': {'min': this.min, 'actual': value}};\r\n    };\r\n\r\n    this._maxValidator = (control: AbstractControl): ValidationErrors | null => {\r\n      const value = this._getValidDateOrNull(this._timeAdapter.deserialize(control.value));\r\n      return !this.max || !value || this._timeAdapter.compareTime(this.max, value) >= 0 ?\r\n        null : {'matTimeSelectMax': {'max': this.max, 'actual': value}};\r\n    };\r\n\r\n    this._validator = Validators.compose([\r\n      this._parseValidator,\r\n      this._minValidator,\r\n      this._maxValidator\r\n    ]);\r\n\r\n    this._localeSubscription = this._timeAdapter.localeChanges.subscribe(\r\n      () => this.value = this.value\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._timeSelectSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: any): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: any): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  /** @docs-private */\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(control) : null;\r\n  }\r\n\r\n  /** @docs-private */\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._onValidatorChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Handle keydown event.\r\n   * @param event The event object.\r\n   */\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown(event: KeyboardEvent) {\r\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\r\n\r\n    if (this._timeSelect && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\r\n      this._timeSelect.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle input event.\r\n   * @param value The current value of the input.\r\n   */\r\n  @HostListener('input', ['$event.target.value'])\r\n  onInput(value: string) {\r\n    let time = this._timeAdapter.parse(value, this._timeFormats.parse.timeInput);\r\n    this._lastValueValid = !time || this._timeAdapter.isValid(time);\r\n    time = this._getValidDateOrNull(time);\r\n\r\n    if (!this._timeAdapter.sameTime(this._value, time)) {\r\n      this._value = time;\r\n      this._onChange(time);\r\n      this._valueChange.next(time);\r\n      this.timeInput.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle change event.\r\n   */\r\n  @HostListener('change')\r\n  onChange() {\r\n    this.timeChange.emit(new MatTimeSelectInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /**\r\n   * Handle blur event.\r\n   */\r\n  @HostListener('blur')\r\n  onBlur() {\r\n    if (this.value) {\r\n      this._formatValue(this.value);\r\n    }\r\n    this._onTouched();\r\n  }\r\n\r\n  /** Returns the palette used by the input's form field, if any. */\r\n  getThemePalette(): ThemePalette {\r\n    return this._formField ? this._formField.color : undefined;\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the time select popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getConnectedOverlayOrigin(): ElementRef {\r\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\r\n  }\r\n\r\n  /** Formats a value and sets it on the input element. */\r\n  private _formatValue(value: D | null) {\r\n    this._elementRef.nativeElement.value = value ? this._timeAdapter.format(value, this._timeFormats.display.timeInput) : '';\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._timeAdapter.isDateInstance(obj) && this._timeAdapter.isValid(obj) ? obj : null;\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {MatButton} from '@angular/material';\r\nimport {merge, of, Subscription} from 'rxjs';\r\nimport {MatTimeSelectIntl} from './time-select-intl.service';\r\nimport {MatTimeSelectComponent} from './time-select.component';\r\n\r\n/** Can be used to override the icon of a `matTimeSelectToggle`. */\r\n@Directive({\r\n  selector: '[matTimeSelectToggleIcon]'\r\n})\r\nexport class MatTimeSelectToggleIconDirective {}\r\n\r\n@Component({\r\n  selector: 'mat-time-select-toggle',\r\n  templateUrl: './time-select-toggle.component.html',\r\n  styleUrls: ['./time-select-toggle.component.scss'],\r\n  exportAs: 'matTimeSelectToggle',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatTimeSelectToggleComponent<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  private _disabled: boolean;\r\n  private _disableRipple: boolean;\r\n\r\n  /** Time select instance that the button will toggle. */\r\n  @Input('for') timeSelect: MatTimeSelectComponent<D>;\r\n  /** Tabindex for the toggle. */\r\n  @Input() tabIndex: number | null;\r\n\r\n  /** Custom icon set by the consumer. */\r\n  @ContentChild(MatTimeSelectToggleIconDirective) customIcon: MatTimeSelectToggleIconDirective;\r\n  /** Underlying button element. */\r\n  @ViewChild('button') button: MatButton;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.timeSelect.disabled : this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /** Whether ripples on the toggle should be disabled. */\r\n  @Input()\r\n  get disableRipple(): boolean {\r\n    return this._disableRipple;\r\n  }\r\n  set disableRipple(value: boolean) {\r\n    this._disableRipple = coerceBooleanProperty(value);\r\n  }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class')\r\n  get class(): string { return 'mat-time-select-toggle'; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('attr.tabindex')\r\n  get tabindex(): string { return '-1'; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class.mat-time-select-toggle-active')\r\n  get active(): boolean { return this.timeSelect && this.timeSelect.opened; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class.mat-accent')\r\n  get accent(): boolean { return this.timeSelect && this.timeSelect.color === 'accent'; }\r\n\r\n  /** @docs-private */\r\n  @HostBinding('class.mat-warn')\r\n  get warn(): boolean { return this.timeSelect && this.timeSelect.color === 'warn'; }\r\n\r\n  constructor(public _intl: MatTimeSelectIntl,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Attribute('tabindex') defaultTabIndex: string) {\r\n    const parsedTabIndex = parseInt(defaultTabIndex, 10);\r\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.timeSelect) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  /** Handle focus event. */\r\n  @HostListener('focus')\r\n  onFocus() {\r\n    this.button.focus();\r\n  }\r\n\r\n  /**\r\n   * Open the time select.\r\n   * @param event The triggered event to open the time select.\r\n   */\r\n  open(event: Event): void {\r\n    if (this.timeSelect && !this.disabled) {\r\n      this.timeSelect.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const timeSelectDisabled = this.timeSelect ? this.timeSelect.disabledChange : of();\r\n    const inputDisabled = this.timeSelect && this.timeSelect._timeSelectInput ?\r\n      this.timeSelect._timeSelectInput.disabledChange : of();\r\n    const timeSelectToggled = this.timeSelect ?\r\n      merge(this.timeSelect.openStream, this.timeSelect.closeStream) :\r\n      of();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(\r\n      this._intl.changes,\r\n      timeSelectDisabled,\r\n      inputDisabled,\r\n      timeSelectToggled\r\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {MatButtonModule, MatButtonToggleModule, MatIconModule, MatRippleModule} from '@angular/material';\r\n\r\nimport {MatTimeSelectIntl} from './time-select-intl.service';\r\n\r\nimport {\r\n  MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n  MatTimeSelectComponent,\r\n  MatTimeSelectContentComponent\r\n} from './time-select.component';\r\nimport {MatTimeSelectInputDirective} from './time-select-input.directive';\r\nimport {MatTimeSelectToggleComponent, MatTimeSelectToggleIconDirective} from './time-select-toggle.component';\r\nimport {MatTimeUnitOptionComponent} from './time-unit-option.component';\r\nimport {MatTimeUnitSelectComponent} from './time-unit-select.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    A11yModule,\r\n    PortalModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatIconModule,\r\n    MatRippleModule\r\n  ],\r\n  declarations: [\r\n    MatTimeSelectComponent,\r\n    MatTimeSelectContentComponent,\r\n    MatTimeSelectInputDirective,\r\n    MatTimeSelectToggleComponent,\r\n    MatTimeSelectToggleIconDirective,\r\n    MatTimeUnitOptionComponent,\r\n    MatTimeUnitSelectComponent\r\n  ],\r\n  exports: [\r\n    MatTimeSelectComponent,\r\n    MatTimeSelectContentComponent,\r\n    MatTimeSelectInputDirective,\r\n    MatTimeSelectToggleComponent,\r\n    MatTimeSelectToggleIconDirective,\r\n    MatTimeUnitOptionComponent,\r\n    MatTimeUnitSelectComponent\r\n  ],\r\n  entryComponents: [\r\n    MatTimeSelectContentComponent\r\n  ],\r\n  providers: [\r\n    MatTimeSelectIntl,\r\n    MAT_TIME_SELECT_SCROLL_STRATEGY_FACTORY_PROVIDER\r\n  ]\r\n})\r\nexport class MatTimeSelectModule { }\r\n","import {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {Moment} from 'moment';\r\n\r\nimport * as _moment from 'moment';\r\n\r\nconst moment = _moment;\r\n\r\n/** Adapts the native JS Date for use with cdk-based components that work with times. */\r\n@Injectable()\r\nexport class NativeTimeAdapter extends TimeAdapter<Date> {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) locale: string,\r\n              @Optional() private _dateAdapter: DateAdapter<Date>) {\r\n    super();\r\n    this.setLocale(locale);\r\n  }\r\n\r\n  getYear(date: Date): number {\r\n    return this._dateAdapter.getYear(date);\r\n  }\r\n\r\n  getMonth(date: Date): number {\r\n    return this._dateAdapter.getMonth(date);\r\n  }\r\n\r\n  getDate(date: Date): number {\r\n    return this._dateAdapter.getDate(date);\r\n  }\r\n\r\n  getDayOfWeek(date: Date): number {\r\n    return this._dateAdapter.getDayOfWeek(date);\r\n  }\r\n\r\n  getHour(date: Date): number {\r\n    return date.getHours();\r\n  }\r\n\r\n  getMinute(date: Date): number {\r\n    return date.getMinutes();\r\n  }\r\n\r\n  getSecond(date: Date): number {\r\n    return date.getSeconds();\r\n  }\r\n\r\n  getYearName(date: Date): string {\r\n    return this._dateAdapter.getYearName(date);\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    return this._dateAdapter.getMonthNames(style);\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return this._dateAdapter.getDateNames();\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    return this._dateAdapter.getDayOfWeekNames(style);\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return this._dateAdapter.getFirstDayOfWeek();\r\n  }\r\n\r\n  getNumDaysInMonth(date: Date): number {\r\n    return this._dateAdapter.getNumDaysInMonth(date);\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return new Date(date.getTime());\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Date {\r\n    return this._dateAdapter.createDate(year, month, date);\r\n  }\r\n\r\n  createTime(hour: number = 0, minute: number = 0, second: number = 0): Date {\r\n    if (hour < 0 || hour > 23) {\r\n      throw new Error(`Invalid hour ${hour}. Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw new Error(`Invalid minute ${minute}. Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    if (second < 0 || second > 59) {\r\n      throw new Error(`Invalid second ${second}. Second has to be between 0 and 59.`);\r\n    }\r\n\r\n    const date = new Date();\r\n    date.setHours(hour,  minute, second);\r\n    return date;\r\n  }\r\n\r\n  today(): Date {\r\n    return this.now();\r\n  }\r\n\r\n  now(): Date {\r\n    return new Date(Date.now());\r\n  }\r\n\r\n  parse(value: any, parseFormat: any): Date | null {\r\n    return this._dateAdapter.parse(value, parseFormat);\r\n  }\r\n\r\n  format(date: Date, displayFormat: any): string {\r\n    return this._dateAdapter.format(date, displayFormat);\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this._dateAdapter.addCalendarYears(date, years);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    return this._dateAdapter.addCalendarMonths(date, months);\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._dateAdapter.addCalendarDays(date, days);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    const dateString = this._dateAdapter.toIso8601(date);\r\n    const timeString = [\r\n      this._2digit(date.getUTCHours()),\r\n      this._2digit(date.getUTCMinutes()),\r\n      this._2digit(date.getUTCSeconds())\r\n    ].join(':');\r\n    return `${dateString}T${timeString}Z`;\r\n  }\r\n\r\n  toMoment(date: Date): Moment {\r\n    return moment(date).locale(this.locale);\r\n  }\r\n\r\n  deserialize(value: any): Date | null {\r\n    return this._dateAdapter.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return this._dateAdapter.isDateInstance(obj);\r\n  }\r\n\r\n  isValid(date: Date): boolean {\r\n    return this._dateAdapter.isValid(date);\r\n  }\r\n\r\n  invalid(): Date {\r\n    return this._dateAdapter.invalid();\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\r\n\r\n}\r\n","import {MatTimeFormats} from './time-formats';\r\n\r\nexport const MAT_NATIVE_TIME_FORMATS: MatTimeFormats = {\r\n  parse: {\r\n    timeInput: null\r\n  },\r\n  display: {\r\n    timeInput: {hour: 'numeric', minute: 'numeric'},\r\n    timeA11yLabel: {hour: 'numeric', minute: '2-digit'}\r\n  }\r\n};\r\n","import {NgModule} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {MAT_TIME_FORMATS} from './time-formats';\r\nimport {NativeTimeAdapter} from './native-time-adapter.service';\r\nimport {MAT_NATIVE_TIME_FORMATS} from './native-time-formats';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {provide: TimeAdapter, useClass: NativeTimeAdapter, deps: [MAT_DATE_LOCALE, DateAdapter]},\r\n    {provide: MAT_TIME_FORMATS, useValue: MAT_NATIVE_TIME_FORMATS}\r\n  ]\r\n})\r\nexport class MatNativeTimeModule { }\r\n","import {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {Moment} from 'moment';\r\n\r\nimport * as _moment from 'moment';\r\n\r\nconst moment = _moment;\r\n\r\n/** Adapts Moment.js Dates for use with Angular Material. */\r\n@Injectable()\r\nexport class MomentTimeAdapter extends TimeAdapter<Moment> {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) locale: string,\r\n              @Optional() private _dateAdapter: DateAdapter<Moment>) {\r\n    super();\r\n    this.setLocale(locale || moment.locale());\r\n  }\r\n\r\n  getYear(date: Moment): number {\r\n    return this.clone(date).year();\r\n  }\r\n\r\n  getMonth(date: Moment): number {\r\n    return this.clone(date).month();\r\n  }\r\n\r\n  getDate(date: Moment): number {\r\n    return this.clone(date).date();\r\n  }\r\n\r\n  getDayOfWeek(date: Moment): number {\r\n    return this.clone(date).day();\r\n  }\r\n\r\n  getHour(date: Moment): number {\r\n    return this.clone(date).hour();\r\n  }\r\n\r\n  getMinute(date: Moment): number {\r\n    return this.clone(date).minute();\r\n  }\r\n\r\n  getSecond(date: Moment): number {\r\n    return this.clone(date).second();\r\n  }\r\n\r\n  clone(date: Moment): Moment {\r\n    return date.clone().locale(this.locale);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Moment {\r\n    return this.clone(this._dateAdapter.createDate(year, month, date));\r\n  }\r\n\r\n  createTime(hour: number = 0, minute: number = 0, second: number = 0): Moment {\r\n    if (hour < 0 || hour > 23) {\r\n      throw new Error(`Invalid hour ${hour}. Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw new Error(`Invalid minute ${minute}. Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    if (second < 0 || second > 59) {\r\n      throw new Error(`Invalid second ${second}. Second has to be between 0 and 59.`);\r\n    }\r\n\r\n    return moment({hour, minute, second}).locale(this.locale);\r\n  }\r\n\r\n  today(): Moment {\r\n    return this.now();\r\n  }\r\n\r\n  now(): Moment {\r\n    return moment().locale(this.locale);\r\n  }\r\n\r\n  parse(value: any, parseFormat: string): Moment | null {\r\n    if (value && typeof value === 'string') {\r\n      return moment(value, parseFormat, this.locale);\r\n    }\r\n    return value ? moment(value).locale(this.locale) : null;\r\n  }\r\n\r\n  format(date: Moment, displayFormat: string): string {\r\n    date = this.clone(date);\r\n    if (!this.isValid(date)) {\r\n      throw new Error('MomentTimeAdapter: Cannot format invalid date.');\r\n    }\r\n    return date.format(displayFormat);\r\n  }\r\n\r\n  addCalendarYears(date: Moment, years: number): Moment {\r\n    return this.clone(date).add({years});\r\n  }\r\n\r\n  addCalendarMonths(date: Moment, months: number): Moment {\r\n    return this.clone(date).add({months});\r\n  }\r\n\r\n  addCalendarDays(date: Moment, days: number): Moment {\r\n    return this.clone(date).add({days});\r\n  }\r\n\r\n  toIso8601(date: Moment): string {\r\n    return this.clone(date).format();\r\n  }\r\n\r\n  toMoment(date: Moment): Moment {\r\n    return this.clone(date);\r\n  }\r\n\r\n  deserialize(value: any): Moment | null {\r\n    let date: Moment;\r\n    if (value instanceof Date) {\r\n      date = moment(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      date = moment(value, moment.ISO_8601);\r\n    }\r\n    if (date && this.isValid(date)) {\r\n      return date;\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return moment.isMoment(obj);\r\n  }\r\n\r\n  isValid(date: Moment): boolean {\r\n    return this.clone(date).isValid();\r\n  }\r\n\r\n  invalid(): Moment {\r\n    return moment.invalid();\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return [];\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    return [];\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return 0;\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    return [];\r\n  }\r\n\r\n  getNumDaysInMonth(date: Moment): number {\r\n    return 0;\r\n  }\r\n\r\n  getYearName(date: Moment): string {\r\n    return '';\r\n  }\r\n\r\n}\r\n","import {MatTimeFormats} from './time-formats';\r\n\r\nexport const MAT_MOMENT_TIME_FORMATS: MatTimeFormats = {\r\n  parse: {\r\n    timeInput: 'LT'\r\n  },\r\n  display: {\r\n    timeInput: 'LT',\r\n    timeA11yLabel: 'LT'\r\n  }\r\n};\r\n","import {NgModule} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\r\nimport {TimeAdapter} from './time-adapter.service';\r\nimport {MAT_TIME_FORMATS} from './time-formats';\r\nimport {MomentTimeAdapter} from './moment-time-adapter.service';\r\nimport {MAT_MOMENT_TIME_FORMATS} from './moment-time-formats';\r\n\r\n@NgModule({\r\n  providers: [\r\n    {provide: TimeAdapter, useClass: MomentTimeAdapter, deps: [MAT_DATE_LOCALE, DateAdapter]},\r\n    {provide: MAT_TIME_FORMATS, useValue: MAT_MOMENT_TIME_FORMATS}\r\n  ]\r\n})\r\nexport class MatMomentTimeModule { }\r\n"],"names":["tslib_1.__extends","DateAdapter","InjectionToken","Subject","Injectable","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Inject","Input","Output","ViewChild","mixinDisableRipple","coerceBooleanProperty","ElementRef","forwardRef","HostBinding","HostListener","overlay","Overlay","mixinColor","Optional","ViewChildren","Subscription","ComponentPortal","take","PortalInjector","OverlayConfig","merge","filter","ESCAPE","UP_ARROW","Injector","NgZone","ViewContainerRef","Directionality","DOCUMENT","Validators","DOWN_ARROW","Directive","NG_VALUE_ACCESSOR","NG_VALIDATORS","MAT_INPUT_VALUE_ACCESSOR","MatFormField","of","Attribute","ContentChild","NgModule","CommonModule","OverlayModule","A11yModule","PortalModule","MatButtonModule","MatButtonToggleModule","MatIconModule","MatRippleModule","MAT_DATE_LOCALE","moment"],"mappings":"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"}
