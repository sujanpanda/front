import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { MatButton } from '@angular/material';
import { MatTimeSelectIntl } from './time-select-intl.service';
import { MatTimeSelectComponent } from './time-select.component';
/** Can be used to override the icon of a `matTimeSelectToggle`. */
export declare class MatTimeSelectToggleIconDirective {
}
export declare class MatTimeSelectToggleComponent<D> implements AfterContentInit, OnChanges, OnDestroy {
    _intl: MatTimeSelectIntl;
    private _changeDetectorRef;
    private _stateChanges;
    private _disabled;
    private _disableRipple;
    /** Time select instance that the button will toggle. */
    timeSelect: MatTimeSelectComponent<D>;
    /** Tabindex for the toggle. */
    tabIndex: number | null;
    /** Custom icon set by the consumer. */
    customIcon: MatTimeSelectToggleIconDirective;
    /** Underlying button element. */
    button: MatButton;
    /** Whether the toggle button is disabled. */
    disabled: boolean;
    /** Whether ripples on the toggle should be disabled. */
    disableRipple: boolean;
    /** @docs-private */
    readonly class: string;
    /** @docs-private */
    readonly tabindex: string;
    /** @docs-private */
    readonly active: boolean;
    /** @docs-private */
    readonly accent: boolean;
    /** @docs-private */
    readonly warn: boolean;
    constructor(_intl: MatTimeSelectIntl, _changeDetectorRef: ChangeDetectorRef, defaultTabIndex: string);
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    /** Handle focus event. */
    onFocus(): void;
    /**
     * Open the time select.
     * @param event The triggered event to open the time select.
     */
    open(event: Event): void;
    private _watchStateChanges;
}
