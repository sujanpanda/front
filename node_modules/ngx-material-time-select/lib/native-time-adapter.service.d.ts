import { DateAdapter } from '@angular/material';
import { TimeAdapter } from './time-adapter.service';
import { Moment } from 'moment';
/** Adapts the native JS Date for use with cdk-based components that work with times. */
export declare class NativeTimeAdapter extends TimeAdapter<Date> {
    private _dateAdapter;
    constructor(locale: string, _dateAdapter: DateAdapter<Date>);
    getYear(date: Date): number;
    getMonth(date: Date): number;
    getDate(date: Date): number;
    getDayOfWeek(date: Date): number;
    getHour(date: Date): number;
    getMinute(date: Date): number;
    getSecond(date: Date): number;
    getYearName(date: Date): string;
    getMonthNames(style: 'long' | 'short' | 'narrow'): string[];
    getDateNames(): string[];
    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];
    getFirstDayOfWeek(): number;
    getNumDaysInMonth(date: Date): number;
    clone(date: Date): Date;
    createDate(year: number, month: number, date: number): Date;
    createTime(hour?: number, minute?: number, second?: number): Date;
    today(): Date;
    now(): Date;
    parse(value: any, parseFormat: any): Date | null;
    format(date: Date, displayFormat: any): string;
    addCalendarYears(date: Date, years: number): Date;
    addCalendarMonths(date: Date, months: number): Date;
    addCalendarDays(date: Date, days: number): Date;
    toIso8601(date: Date): string;
    toMoment(date: Date): Moment;
    deserialize(value: any): Date | null;
    isDateInstance(obj: any): boolean;
    isValid(date: Date): boolean;
    invalid(): Date;
    /**
     * Pads a number to make it two digits.
     * @param n The number to pad.
     * @returns The padded number.
     */
    private _2digit;
}
