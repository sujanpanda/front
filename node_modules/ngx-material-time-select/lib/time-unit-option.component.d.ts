import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { CanDisableRippleCtor } from '@angular/material';
import { MatTimeUnitSelectComponent } from './time-unit-select.component';
export declare class MatTimeUnitOptionBase {
}
export declare const _MatTimeUnitOptionMixinBase: CanDisableRippleCtor & typeof MatTimeUnitOptionBase;
/** Single time option inside a `<mat-time-unit-select>` element */
export declare class MatTimeUnitOptionComponent<D> extends _MatTimeUnitOptionMixinBase implements OnInit {
    private _elementRef;
    private _changeDetectorRef;
    timeUnitSelect: MatTimeUnitSelectComponent<D>;
    private _disabled;
    private _selected;
    /** The value of the option. */
    value: number;
    /** Whether ripples for the option are disabled. */
    disableRipple: boolean;
    /** The element containing the display text of the option. */
    _text: ElementRef<HTMLElement>;
    /** @docs-private */
    readonly class = "mat-time-unit-option";
    /** @docs-private */
    readonly role = "option";
    /** @docs-private */
    readonly tabindex = -1;
    /** Whether or not the option is currently selected. */
    selected: boolean;
    /** Whether the option is disabled. */
    disabled: boolean;
    /** @docs-private */
    readonly ariaDisabled: string;
    constructor(_elementRef: ElementRef<HTMLElement>, _changeDetectorRef: ChangeDetectorRef, timeUnitSelect: MatTimeUnitSelectComponent<D>);
    ngOnInit(): void;
    /** Gets the label to be used when determining whether the option should be focused. */
    getLabel(): string;
    /** Gets the host DOM element. */
    _getHostElement(): HTMLElement;
    /** Whether ripples for the option are disabled. */
    _isRippleDisabled(): boolean;
    /** Handle click on the option. */
    _onClick(): void;
}
