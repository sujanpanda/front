/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
/**
 * TimeSelect data that requires internationalization.
 */
var MatTimeSelectIntl = /** @class */ (function () {
    function MatTimeSelectIntl() {
        /**
         * Stream that emits whenever the labels here are changed. Use this to notify
         * components if the labels have changed after initialization.
         */
        this.changes = new Subject();
        /**
         * A label for the button used to open the time select popup (used by screen readers).
         */
        this.openTimeSelectLabel = 'Open time select';
        /**
         * A label for the a.m. button toggle (used by screen readers).
         */
        this.amLabel = 'AM';
        /**
         * A label for the p.m. button toggle (used by screen readers).
         */
        this.pmLabel = 'PM';
    }
    MatTimeSelectIntl.decorators = [
        { type: Injectable }
    ];
    return MatTimeSelectIntl;
}());
export { MatTimeSelectIntl };
if (false) {
    /**
     * Stream that emits whenever the labels here are changed. Use this to notify
     * components if the labels have changed after initialization.
     * @type {?}
     */
    MatTimeSelectIntl.prototype.changes;
    /**
     * A label for the button used to open the time select popup (used by screen readers).
     * @type {?}
     */
    MatTimeSelectIntl.prototype.openTimeSelectLabel;
    /**
     * A label for the a.m. button toggle (used by screen readers).
     * @type {?}
     */
    MatTimeSelectIntl.prototype.amLabel;
    /**
     * A label for the p.m. button toggle (used by screen readers).
     * @type {?}
     */
    MatTimeSelectIntl.prototype.pmLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1zZWxlY3QtaW50bC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hdGVyaWFsLXRpbWUtc2VsZWN0LyIsInNvdXJjZXMiOlsibGliL3RpbWUtc2VsZWN0LWludGwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sTUFBTSxDQUFDOzs7O0FBRzdCO0lBQUE7Ozs7O1FBT1csWUFBTyxHQUFrQixJQUFJLE9BQU8sRUFBUSxDQUFDOzs7O1FBR3RELHdCQUFtQixHQUFHLGtCQUFrQixDQUFDOzs7O1FBR3pDLFlBQU8sR0FBRyxJQUFJLENBQUM7Ozs7UUFHZixZQUFPLEdBQUcsSUFBSSxDQUFDO0lBRWpCLENBQUM7O2dCQWxCQSxVQUFVOztJQWtCWCx3QkFBQztDQUFBLEFBbEJELElBa0JDO1NBakJZLGlCQUFpQjs7Ozs7OztJQU01QixvQ0FBc0Q7Ozs7O0lBR3RELGdEQUF5Qzs7Ozs7SUFHekMsb0NBQWU7Ozs7O0lBR2Ysb0NBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xyXG5cclxuLyoqIFRpbWVTZWxlY3QgZGF0YSB0aGF0IHJlcXVpcmVzIGludGVybmF0aW9uYWxpemF0aW9uLiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBNYXRUaW1lU2VsZWN0SW50bCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0cmVhbSB0aGF0IGVtaXRzIHdoZW5ldmVyIHRoZSBsYWJlbHMgaGVyZSBhcmUgY2hhbmdlZC4gVXNlIHRoaXMgdG8gbm90aWZ5XHJcbiAgICogY29tcG9uZW50cyBpZiB0aGUgbGFiZWxzIGhhdmUgY2hhbmdlZCBhZnRlciBpbml0aWFsaXphdGlvbi5cclxuICAgKi9cclxuICByZWFkb25seSBjaGFuZ2VzOiBTdWJqZWN0PHZvaWQ+ID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcclxuXHJcbiAgLyoqIEEgbGFiZWwgZm9yIHRoZSBidXR0b24gdXNlZCB0byBvcGVuIHRoZSB0aW1lIHNlbGVjdCBwb3B1cCAodXNlZCBieSBzY3JlZW4gcmVhZGVycykuICovXHJcbiAgb3BlblRpbWVTZWxlY3RMYWJlbCA9ICdPcGVuIHRpbWUgc2VsZWN0JztcclxuXHJcbiAgLyoqIEEgbGFiZWwgZm9yIHRoZSBhLm0uIGJ1dHRvbiB0b2dnbGUgKHVzZWQgYnkgc2NyZWVuIHJlYWRlcnMpLiAqL1xyXG4gIGFtTGFiZWwgPSAnQU0nO1xyXG5cclxuICAvKiogQSBsYWJlbCBmb3IgdGhlIHAubS4gYnV0dG9uIHRvZ2dsZSAodXNlZCBieSBzY3JlZW4gcmVhZGVycykuICovXHJcbiAgcG1MYWJlbCA9ICdQTSc7XHJcblxyXG59XHJcbiJdfQ==